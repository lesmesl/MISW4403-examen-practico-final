{
	"info": {
		"_postman_id": "53875329-dad5-4e96-9b69-09406e7d450b",
		"name": "Aerolíneas",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30444108"
	},
	"item": [
		{
			"name": "Crear una aerolínea válida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"\tpm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Save airline ID in variable\", function () {\r",
							"\tpm.collectionVariables.set(\"airlineId\", pm.response.json().id);\r",
							"\tpm.collectionVariables.set(\"airlineName\", pm.response.json().nombre);\r",
							"\tpm.collectionVariables.set(\"airlineDescription\", pm.response.json().descripcion);\r",
							"\tpm.collectionVariables.set(\"airlineFechaFundacion\", pm.response.json().fechaFundacion);\r",
							"\tpm.collectionVariables.set(\"airlinePaginaWeb\", pm.response.json().paginaWeb);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"// Check if the response contains the specified keys\r",
							"pm.test('Response body contains expected keys', function () {\r",
							"    pm.expect(response).to.have.property('nombre');\r",
							"    pm.expect(response).to.have.property('descripcion');\r",
							"    pm.expect(response).to.have.property('fechaFundacion');\r",
							"    pm.expect(response).to.have.property('paginaWeb');\r",
							"    pm.expect(response).to.have.property('id');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Avianca\",\n    \"descripcion\": \"Aerolínea colombiana\",\n    \"fechaFundacion\": \"1919-12-05\",\n    \"paginaWeb\": \"https://www.avianca.com\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/airlines",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear una aerolínea inválida.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"\tpm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body contains correct message\", function () {\r",
							"\tvar jsonData = pm.response.json();\r",
							"\tpm.expect(jsonData.message).to.eql(\"La fecha de fundación debe ser una fecha pasada\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Avianca\",\n    \"descripcion\": \"Aerolínea colombiana\",\n    \"fechaFundacion\": \"2030-12-05\",\n    \"paginaWeb\": \"https://www.avianca.com\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/airlines",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todas las aerolíneas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test for status code 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Ensure that the response body contains at least one record\r",
							"pm.test(\"At least one record is returned\", function () {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.be.an('array').that.is.not.empty;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener una aerolínea por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test for status code 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"// Check if the response contains the specified keys\r",
							"pm.test('Response body contains expected keys', function () {\r",
							"    pm.expect(response).to.have.property('nombre');\r",
							"    pm.expect(response).to.have.property('descripcion');\r",
							"    pm.expect(response).to.have.property('fechaFundacion');\r",
							"    pm.expect(response).to.have.property('paginaWeb');\r",
							"    pm.expect(response).to.have.property('id');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airlineId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airlineId}}"
					]
				},
				"description": "Replace airlineId variable with a valid UUID"
			},
			"response": []
		},
		{
			"name": "Obtener una aerolínea por un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test for status code 404\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"// Check for the correct message in the response body message\": \"La aerolínea con el id dado no fue encontrada\"\r",
							"pm.test(\"Response message is correct\", function () {\r",
							"\tpm.expect(response.message).to.eql(\"La aerolínea con el id dado no fue encontrada\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/d96be881-44dd-47a8-838c-115afabfd591",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"d96be881-44dd-47a8-838c-115afabfd591"
					]
				},
				"description": "Replace airlineId variable with a valid UUID"
			},
			"response": []
		},
		{
			"name": "Actualizar una aerolínea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test for status code 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Extracting the response body\r",
							"const responseBody = pm.response.json();\r",
							"\r",
							"// Validating if the updated nombre is different from the airlineName variable\r",
							"pm.test(\"Validating if the updated nombre is different from the airlineName variable\", function () {\r",
							"    pm.expect(responseBody.nombre).to.not.equal(pm.collectionVariables.get(\"airlineName\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Avianca Updated\",\n    \"descripcion\": \"Aerolínea colombiana actualizada\",\n    \"fechaFundacion\": \"1919-12-05\",\n    \"paginaWeb\": \"https://www.avianca.com\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airlineId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airlineId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar una aerolínea con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test for status code 404\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"// Check for the correct message in the response body message\": \"La aerolínea con el id dado no fue encontrada\"\r",
							"pm.test(\"Response message is correct\", function () {\r",
							"\tpm.expect(response.message).to.eql(\"La aerolínea con el id dado no fue encontrada\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"Avianca Updated\",\n    \"descripcion\": \"Aerolínea colombiana actualizada\",\n    \"fechaFundacion\": \"1919-12-05\",\n    \"paginaWeb\": \"https://www.avianca.com\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/98eab6cf-6e84-453e-aed3-6b73d73cf3e2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"98eab6cf-6e84-453e-aed3-6b73d73cf3e2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar una aerolínea por su ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test for status code 204\r",
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airlineId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airlineId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar una aerolínea con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test for status code 404\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"// Check for the correct message in the response body message\": \"La aerolínea con el id dado no fue encontrada\"\r",
							"pm.test(\"Response message is correct\", function () {\r",
							"\tpm.expect(response.message).to.eql(\"La aerolínea con el id dado no fue encontrada\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airlineId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airlineId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "default"
		},
		{
			"key": "airlineId",
			"value": ""
		},
		{
			"key": "airlineName",
			"value": ""
		},
		{
			"key": "airlineDescription",
			"value": ""
		},
		{
			"key": "airlineFechaFundacion",
			"value": ""
		},
		{
			"key": "airlinePaginaWeb",
			"value": ""
		}
	]
}